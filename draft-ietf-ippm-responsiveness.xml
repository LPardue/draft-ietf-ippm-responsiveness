<?xml version="1.0" encoding="utf-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc version 1.6.17 (Ruby 2.6.10) -->


<!DOCTYPE rfc  [
  <!ENTITY nbsp    "&#160;">
  <!ENTITY zwsp   "&#8203;">
  <!ENTITY nbhy   "&#8209;">
  <!ENTITY wj     "&#8288;">

]>


<rfc ipr="trust200902" docName="draft-ietf-ippm-responsiveness-03" category="std" consensus="true" submissionType="IETF" tocInclude="true" sortRefs="true" symRefs="true">
  <front>
    <title abbrev="Responsiveness under Working Conditions">Responsiveness under Working Conditions</title>

    <author initials="C." surname="Paasch" fullname="Christoph Paasch">
      <organization>Apple Inc.</organization>
      <address>
        <postal>
          <street>One Apple Park Way</street>
          <city>Cupertino, California 95014</city>
          <country>United States of America</country>
        </postal>
        <email>cpaasch@apple.com</email>
      </address>
    </author>
    <author initials="R." surname="Meyer" fullname="Randall Meyer">
      <organization>Apple Inc.</organization>
      <address>
        <postal>
          <street>One Apple Park Way</street>
          <city>Cupertino, California 95014</city>
          <country>United States of America</country>
        </postal>
        <email>rrm@apple.com</email>
      </address>
    </author>
    <author initials="S." surname="Cheshire" fullname="Stuart Cheshire">
      <organization>Apple Inc.</organization>
      <address>
        <postal>
          <street>One Apple Park Way</street>
          <city>Cupertino, California 95014</city>
          <country>United States of America</country>
        </postal>
        <email>cheshire@apple.com</email>
      </address>
    </author>
    <author initials="W." surname="Hawkins" fullname="Will Hawkins">
      <organization>University of Cincinnati</organization>
      <address>
        <email>hawkinwh@ucmail.uc.edu</email>
      </address>
    </author>

    <date year="2023" month="October" day="17"/>

    <area>Transport</area>
    <workgroup>IP Performance Measurement</workgroup>
    <keyword>Internet-Draft</keyword>

    <abstract>


<t>For many years, a lack of responsiveness, variously called
lag, latency, or bufferbloat, has been recognized
as an unfortunate, but common, symptom in today's networks.
Even after a decade of work on standardizing technical solutions,
it remains a common problem for the end users.</t>

<t>Everyone "knows" that it is "normal" for a video conference to
have problems when somebody else at home is
watching a 4K movie or uploading photos from their phone.
However, there is no technical reason for this to be the case.
In fact, various queue management solutions
have solved the problem.</t>

<t>Our networks remain unresponsive, not from a lack of technical solutions,
but rather a lack of awareness of the problem and deployment of its solutions.
We believe that creating a tool that measures the problem and matches people's
everyday experience will create the necessary awareness,
and result in a demand for solutions.</t>

<t>This document specifies the "Responsiveness Test" for measuring responsiveness.
It uses common protocols and mechanisms to measure user
experience specifically when the network is under working conditions.
The measurement is expressed as "Round-trips Per Minute" (RPM)
and should be included with throughput (up and down) and
idle latency as critical indicators of network quality.</t>



    </abstract>



  </front>

  <middle>


<section anchor="introduction"><name>Introduction</name>

<t>For many years, a lack of responsiveness, variously called
lag, latency, or bufferbloat, has been recognized
as an unfortunate, but common, symptom in today's networks <xref target="Bufferbloat"/>.
Solutions like fq_codel <xref target="RFC8290"/>, PIE <xref target="RFC8033"/> or L4S <xref target="RFC9330"/> have been standardized
and are to some extent widely implemented.
Nevertheless, people still suffer from bufferbloat.</t>

<t>Although significant, the impact on user experience can be transitory --
that is, its effect is not always visible to the user.
Whenever a network is actively being used at its full capacity,
buffers can fill up and create latency for traffic.
The duration of those full buffers may be brief:
a medium-sized file transfer, like an email attachment
or uploading photos,
can create bursts of latency spikes.
An example of this is lag occurring during a videoconference,
where a connection is briefly shown as unstable.</t>

<t>These short-lived disruptions make it hard to narrow down the cause.
We believe that it is necessary to create a standardized way to
measure and express responsiveness.</t>

<t>Including the responsiveness-under-working-conditions test
among other measurements of network quality (e.g., throughput
and idle latency) would raise awareness of the problem and
establish the expectation among users that their network providers deploy
solutions.</t>

<section anchor="terminology"><name>Terminology</name>

<t>A word about the term "bufferbloat" -- the undesirable latency
that comes from a router or other network equipment
buffering too much data.
This document uses the term as a general description of bad latency,
using more precise wording where warranted.</t>

<t>"Latency" is a poor measure of responsiveness,
because it can be hard for the general public to understand.
The units are unfamiliar ("what is a millisecond?") and
counterintuitive ("100 msec -- that sounds good --
it's only a tenth of a second!").</t>

<t>Instead, we define the term "responsiveness under working conditions"
to make it clear that we are measuring all, not just idle, conditions,
and use "round-trips per minute" as the unit.
The advantage of using round-trips per minute as the unit are two-fold: First, it allows for a unit
that is "the higher the better". This kind of unit is often more intuitive for end-users.
Second, the range of the values tends to be around the 4-digit integer range which
is also a value easy to compare and read, again allowing for a more intuitive use.
Finally, we abbreviate the unit to "RPM", a wink to the
"revolutions per minute" that we use for car engines.</t>

<t>This document defines an algorithm for the "Responsiveness Test"
that explicitly measures responsiveness under working conditions.</t>

</section>
</section>
<section anchor="design-constraints"><name>Design Constraints</name>

<t>There are many challenges to defining measurements of the Internet:
the dynamic nature of the Internet,
the diverse nature of the traffic,
the large number of devices that affect traffic,
the difficulty of attaining appropriate measurement conditions,
diurnal traffic patterns,
and changing routes.</t>

<t>In order to minimize the effects of these challenges,
it's best to keep the test duration relatively short.</t>

<t>TCP and UDP traffic, or traffic on ports 80 and 443, may take
significantly different paths over the network between source and destination
and be subject to entirely different Quality of Service (QoS) treatment.
A good test will use standard transport-layer traffic -- typical
for people's use of the network --
that is subject to the transport layer's congestion control algorithms
that might reduce the traffic's rate and thus its buffering in the network.</t>

<t>Traditionally, one thinks of bufferbloat happening in the network, i.e., on
routers and switches of the Internet.
However, the networking stacks of the clients and servers can
have huge buffers.
Data sitting in TCP sockets or waiting for the application
to send or read causes artificial latency, and affects user experience
the same way as in-network bufferbloat.</t>

<t>Finally, it is crucial to recognize that significant
queueing only happens on entry to the lowest-capacity
(or "bottleneck") hop on a network path.
For any flow of data between two endpoints
there is always one hop along the path where the capacity
available to that flow at that hop is the lowest among
all the hops of that flow's path at that moment in time.
It is important to understand that the existence of a
lowest-capacity hop on a network path and a buffer to smooth bursts
of data is not itself a problem.
In a heterogeneous network like the Internet it is
inevitable that there must necessarily be some hop
along the path with the lowest capacity for that path.
If that hop were to be improved, then some other hop would
become the new lowest-capacity hop for that path.
In this context a "bottleneck" should not be seen as a problem to
be fixed, because any attempt to "fix" the bottleneck is futile --
such a "fix" can never remove the existence of a bottleneck
on a path; it just moves the bottleneck somewhere else.
Arguably, this heterogeneity of the Internet is one of its greatest strengths.
Allowing individual technologies to evolve and improve at their
own pace, without requiring the entire Internet to change in
lock-step, has enabled enormous improvements over the years
in technologies like DSL, cable modems, Ethernet, and Wi-Fi,
each advancing independently as new developments became ready.
As a result of this flexibility we have moved incrementally,
one step at a time, from 56kb/s dial-up modems in the 1990s to
Gb/s home Internet service and Gb/s wireless connectivity today.</t>

<t>Note that in a shared datagram network, conditions do not remain static.
The hop that is the current bottleneck may change from moment to moment.
For example, changes in simultaneous traffic may result in changes
to a flow's share of a given hop. A user moving around
may cause the Wi-Fi transmission rate to vary widely,
from a few Mb/s when far from the Access Point,
all the way up to Gb/s or more when close to the Access Point.</t>

<t>Consequently, if we wish to enjoy the benefits of the Internet's great
flexibility, we need software that embraces and celebrates this
diversity and adapts intelligently to the varying conditions it encounters.</t>

<t>Because significant queueing only happens on entry to the bottleneck
hop, the queue management at this critical hop of the path almost
entirely determines the responsiveness of the entire flow.
If the bottleneck hop's queue management algorithm allows an
excessively large queue to form, this results in excessively large
delays for packets sitting in that queue awaiting transmission,
significantly degrading overall user experience.</t>

<t>In order to discover the depth of the buffer at the bottleneck hop,
the proposed Responsiveness Test mimics normal network operations and data transfers,
with the goal of filling the bottleneck buffer to capacity, and then
measures the resulting end-to-end latency under these so-called working conditions.
A well-managed bottleneck queue keeps its occupancy
under control, resulting in consistently low round-trip times
and consistently good responsiveness.
A poorly managed bottleneck queue will not.</t>

</section>
<section anchor="goals"><name>Goals</name>

<t>The algorithm described here defines the Responsiveness Test that serves as a means of
quantifying user experience of latency in their network connection. Therefore:</t>

<t><list style="numbers">
  <t>Because today's Internet traffic primarily uses HTTP/2 over TLS, the test's
algorithm should use that protocol.  <vspace blankLines='1'/>
As a side note: other types of traffic are gaining in popularity (HTTP/3)
and/or are already being used widely (RTP).
Traffic prioritization and QoS rules on the Internet may
subject traffic to completely different paths:
these could also be measured separately.</t>
  <t>Because the Internet is marked by the deployment of countless middleboxes like
transparent TCP proxies or traffic prioritization for certain types of traffic,
the Responsiveness Test algorithm must take into account their effect on
TCP-handshake <xref target="RFC0793"/>, TLS-handshake, and request/response.</t>
  <t>Because the goal of the test is to educate end users, the results should be expressed in an intuitive, nontechnical form
and not commit the user to spend a significant amount of their time (we target 20 seconds).</t>
</list></t>

</section>
<section anchor="measuring-responsiveness-under-working-conditions"><name>Measuring Responsiveness Under Working Conditions</name>

<t>Overall, the test to measure responsiveness under working conditions proceeds in two steps:</t>

<t><list style="numbers">
  <t>Put the network connection into "working conditions"</t>
  <t>Measure responsiveness of the network.</t>
</list></t>

<t>The following explains how the former and the latter are achieved.</t>

<section anchor="working-conditions"><name>Working Conditions</name>

<t>What are <em>the</em> conditions that best emulate how a network
connection is used? There is no one true answer to this question. It is a
tradeoff between using realistic traffic patterns and pushing the network to
its limits.</t>

<t>The Responsiveness Test defines working conditions as the condition where the path between the
measuring endpoints is utilized at its end-to-end capacity and the queue at the bottleneck link
is at (or beyond) its maximum occupancy. Under these conditions, the network connection's responsiveness
will be at its worst.</t>

<t>The Responsiveness Test algorithm for reaching working conditions combines
multiple standard HTTP transactions with very large data objects according to realistic traffic patterns
to create these conditions.</t>

<t>This allows to create a stable state of working conditions during which the
bottleneck of the path between client and server has its buffer filled
up entirely, without generating DoS-like traffic
patterns (e.g., intentional UDP flooding). This creates a realistic traffic mix
representative of what a typical user's network experiences in normal operation.</t>

<t>Finally, as end-user usage of the network evolves to newer protocols and congestion
control algorithms, it is important that the working conditions also can evolve
to continuously represent a realistic traffic pattern.</t>

<section anchor="single-flow-vs-multi-flow"><name>Single-flow vs multi-flow</name>

<t>A single TCP connection may not be sufficient
to reach the capacity and full buffer occupancy of a path quickly.
Using a 4MB receive window, over a network with a 32 ms round-trip time,
a single TCP connection can achieve up to 1Gb/s throughput.
Additionally, deep buffers along the path between the two endpoints may be
significantly larger than 4MB.
TCP allows larger receive window sizes, up to 1GB. However, most transport stacks
aggressively limit the size of the receive window to avoid consuming too much
memory.</t>

<t>Thus, the only way to achieve full capacity and full buffer occupancy on those
networks is by creating multiple connections, allowing to actively fill the
bottleneck's buffer to achieve maximum working conditions.</t>

<t>Even if a single TCP connection would be able to fill the bottleneck's buffer,
it may take some time for a single TCP connection to ramp
up to full speed. One of the goals of the Responsiveness Test is to help the user
quickly measure their network. As a result, the test must load the network, take its measurements, and then finish
as fast as possible.</t>

<t>Finally, traditional loss-based TCP congestion control algorithms
react aggressively to packet loss by reducing the congestion window.
This reaction (intended by the protocol design) decreases the
queueing within the network, making it harder to determine the
depth of the bottleneck queue reliably.</t>

<t>The purpose of the Responsiveness Test is not to productively move data
across the network, the way a normal application does.
The purpose of the Responsiveness Test is to, as quickly as possible, simulate
a representative traffic load as if real applications were doing
sustained data transfers and measure the resulting round-trip time
occurring under those realistic conditions.
Because of this, using multiple simultaneous parallel connections
allows the Responsiveness Test to complete its task more quickly, in a way that
overall is less disruptive and less wasteful of network capacity
than a test using a single TCP connection that would take longer
to bring the bottleneck hop to a stable saturated state.</t>

<t>One of the configuration parameters for the test is an upper bound on the number of parallel load-generating
connections. We recommend a default value for this parameter of 16.</t>

</section>
<section anchor="parallel-vs-sequential-uplink-and-downlink"><name>Parallel vs Sequential Uplink and Downlink</name>

<t>Poor responsiveness can be caused by queues in either (or both)
the upstream and the downstream direction.
Furthermore, both paths may differ significantly due to access link
conditions (e.g., 5G downstream and LTE upstream) or routing changes
within the ISPs.
To measure responsiveness under working conditions,
the algorithm must explore both directions.</t>

<t>One approach could be to measure responsiveness in the uplink and downlink
in parallel. It would allow for a shorter test run-time.</t>

<t>However, a number of caveats come with measuring in parallel:</t>

<t><list style="symbols">
  <t>Half-duplex links may not permit simultaneous uplink and downlink traffic.
This restriction means the test might not reach the path's capacity in both directions at once and thus not expose
all the potential sources of low responsiveness.</t>
  <t>Debuggability of the results becomes harder:
During parallel measurement it is impossible to differentiate whether
the observed latency happens in the uplink or the downlink direction.</t>
</list></t>

<t>Thus, we recommend testing uplink and downlink sequentially. Parallel testing
is considered a future extension.</t>

</section>
<section anchor="achieving-full-buffer-utilization"><name>Achieving Full Buffer Utilization</name>

<t>The Responsiveness Test gradually increases the number of TCP connections (known as load-generating connections)
and measures "goodput" (the sum of actual data transferred across all connections in a unit of time)
continuously.
By definition, once goodput is maximized, buffers will start filling up, creating the
"standing queue" that is characteristic of bufferbloat. At this moment the test starts
measuring the responsiveness until it, too, reaches saturation.
At this point we are creating the worst-case scenario within the limits of the
realistic traffic pattern.</t>

<t>The algorithm notes that throughput increases rapidly until TCP
connections complete their TCP slow-start phase.
At that point, throughput eventually stalls,
often due to receive window limitations, particularly in cases of
high network bandwidth, high network round-trip time,
low receive window size, or a combination of all three.
The only means to further increase throughput is by
adding more TCP connections to the pool of load-generating connections.
If new connections leave the throughput the same,
full link utilization has been reached.
At this point, adding more connections will allow to achieve full buffer occupancy.
Responsiveness will gradually decrease from now on, until the buffers
are entirely full and reach stability of the responsiveness as well.</t>

</section>
</section>
<section anchor="test-parameters"><name>Test parameters</name>

<t>A number of parameters can be used to configure the test methodology. The following list
contains the names of those parameters and their default values. The detailed description of the
methodology that follows will explain how these parameters are being used. Experience has shown
that the default values for these parameters allow for a low runtime for the test and produce
accurate results in a wide range of environments.</t>

<texttable>
      <ttcol align='left'>Name</ttcol>
      <ttcol align='left'>Explanation</ttcol>
      <ttcol align='left'>Default Value</ttcol>
      <c>MAD</c>
      <c>Moving Average Distance (number of intervals to take into account for the moving average)</c>
      <c>4</c>
      <c>ID</c>
      <c>Interval duration at which the algorithm reevaluates stability</c>
      <c>1 second</c>
      <c>TMP</c>
      <c>Trimmed Mean Percentage to be trimmed</c>
      <c>95%</c>
      <c>SDT</c>
      <c>Standard Deviation Tolerance for stability detection</c>
      <c>5%</c>
      <c>MNP</c>
      <c>Maximum number of parallel transport-layer connections</c>
      <c>16</c>
      <c>MPS</c>
      <c>Maximum responsiveness probes per second</c>
      <c>100</c>
      <c>PTC</c>
      <c>Percentage of Total Capacity the probes are allowed to consume</c>
      <c>5%</c>
</texttable>

</section>
<section anchor="measuring-responsiveness"><name>Measuring Responsiveness</name>

<t>Measuring responsiveness while achieving working conditions is an iterative process.
Moreover, it requires a sufficiently large sample of measurements to have confidence in the results.</t>

<t>The measurement of the responsiveness happens by sending probe-requests.
There are two types of probe requests:</t>

<t><list style="numbers">
  <t>An HTTP GET request on a connection separate from the load-generating connections ("foreign probes").
This probe type mimics the time it takes for a web browser to connect to a new
web server and request the first element of a web page (e.g., "index.html"),
or the startup time for a video streaming client to launch and begin fetching media.</t>
  <t>An HTTP GET request multiplexed on the load-generating connections ("self probes").
This probe type mimics the time it takes for a video streaming client
to skip ahead to a different chapter in the same video stream,
or for a navigation mapping application to react and fetch new map tiles
when the user scrolls the map to view a different area.
In a well functioning system, fetching new data
over an existing connection should take less time than
creating a brand new TLS connection from scratch to do the same thing.</t>
</list></t>

<t>Foreign probes will provide three (3) sets of data-points: First, the duration of the TCP-handshake
(noted hereafter as <spanx style="verb">tcp_f</spanx>).
Second, the TLS round-trip-time (noted <spanx style="verb">tls_f</spanx>). For this, it is important to note that different TLS versions
have a different number of round-trips. Thus, the TLS establishment time needs to be
normalized to the number of round-trips the TLS handshake takes until the connection
is ready to transmit data. And third, the HTTP elapsed time between issuing the GET
request for a 1-byte object and receiving the entire response (noted <spanx style="verb">http_f</spanx>).</t>

<t>Self probes will provide a single data-point that measures the duration of time between
when the HTTP GET request for the 1-byte object is issued on the load-generating connection and when the
full HTTP response has been received (noted <spanx style="verb">http_s</spanx>).</t>

<t><spanx style="verb">tcp_f</spanx>, <spanx style="verb">tls_f</spanx>, <spanx style="verb">http_f</spanx> and <spanx style="verb">http_s</spanx> are all measured in milliseconds.</t>

<t>The more probes that are sent, the more data available for calculation. In order to generate
as much data as possible, the Responsiveness Test specifies that a client issue these probes regularly.
There is, however, a risk that on low-capacity networks the responsiveness probes
themselves will consume a significant amount of the capacity. Because the test mandates
first saturating capacity before starting to probe for responsiveness, the test will have an
accurate estimate of how much of the capacity the responsiveness probes will consume and never
send more probes than the network can handle.</t>

<t>Limiting the data used by probes can be done by providing an estimate of the number of bytes exchanged for a
each of the probe types. Taking TCP and TLS overheads into account, we can estimate
the amount of data exchanged for a foreign probe to be around 5000 bytes.
For self probes we can expect an overhead of no more than 1000 bytes.</t>

<t>Given this information, we recommend that a test client does
not send more than <spanx style="verb">MPS</spanx> (Maximum responsiveness Probes per Second - default to 100) probes per <spanx style="verb">ID</spanx>.
The probes should be spread out equally over the duration of the interval. The test client
should uniformly and randomly select from the active load-generating connections on which to send self probes.</t>

<t>According to the default parameter values, the probes will consume 300 KB (or 2400Kb) of data per second, meaning
a total capacity utilization of 2400 Kbps for the probing.</t>

<t>On high-speed networks, these default parameter values will provide a significant amount of samples, while at
the same time minimizing the probing overhead.
However, on severely capacity-constrained networks the probing traffic could consume
a significant portion of the available capacity. The Responsiveness Test must
adjust its probing frequency in such a way that the probing traffic does not consume
more than <spanx style="verb">PTC</spanx> (Percentage of Total Capacity - default to 5%) of the available capacity.</t>

<section anchor="aggregating-the-measurements"><name>Aggregating the Measurements</name>

<t>The algorithm produces sets of 4 times for each probe, namely:
<spanx style="verb">tcp_f</spanx>, <spanx style="verb">tls_f</spanx>, <spanx style="verb">http_f</spanx>, <spanx style="verb">http_l</spanx> (from the previous section).
The responsiveness of the network connection being tested evolves over time as buffers gradually reach saturation. Once
the buffers are saturated, responsiveness will stabilize. Thus, the final calculation of network responsiveness
considers the last MAD (Moving Average Distance - default to 4) intervals worth of completed responsiveness probes.</t>

<t>Over that period of time, a large number of samples will have been collected.
These may be affected by noise in the measurements, and outliers. Thus, to aggregate these
we suggest using a trimmed mean at the <spanx style="verb">TMP</spanx> (Trimmed Mean Percentage - default to 95%) percentile, thus providing the following numbers:
<spanx style="verb">TM(tcp_f)</spanx>, <spanx style="verb">TM(tls_f)</spanx>, <spanx style="verb">TM(http_f)</spanx>, <spanx style="verb">TM(http_l)</spanx>.</t>

<t>The responsiveness is then calculated as the weighted mean:</t>

<figure><artwork><![CDATA[
Responsiveness = 60000 /
(1/6*(TM(tcp_f) + TM(tls_f) + TM(http_f)) + 1/2*TM(http_s))
]]></artwork></figure>

<t>This responsiveness value presents round-trips per minute (RPM).</t>

</section>
</section>
<section anchor="final-algorithm"><name>Final Algorithm</name>

<t>Considering the previous two sections, where we explained the meaning of
working conditions and the definition of responsiveness, we can now describe
the design of final algorithm. In order to measure the worst-case latency, we need to transmit
traffic at the full capacity of the path as well as ensure the buffers are filled
to the maximum.
We can achieve this by continuously adding HTTP sessions to the pool of connections
in an ID (Interval duration - default to 1 second) interval. This technique ensures that we quickly reach full capacity full
buffer occupancy. First, the algorithm reaches stability for the goodput. Once
goodput stability has been achieved, responsiveness probes will be transmitted
until responsiveness stability is reached.</t>

<t>We consider both goodput and responsiveness to be stable when the standard deviation
of the moving averages of the responsiveness calculated in the most-recent MAD intervals is within SDT 
(Standard Deviation Tolerance - default to 5%) of the moving average calculated in the most-recent ID.</t>

<t>The following algorithm reaches working conditions of a network
by using HTTP/2 upload (POST) or download (GET) requests of infinitely large
files.
The algorithm is the same for upload and download and uses
the same term "load-generating connection" for each.
The actions of the algorithm take place at regular intervals. For the current draft
the interval is defined as one second.</t>

<t>Where</t>

<t><list style="symbols">
  <t><spanx style="verb">i</spanx>: The index of the current interval. The variable <spanx style="verb">i</spanx> is initialized to <spanx style="verb">0</spanx> when the algorithm begins and
increases by one for each interval.</t>
  <t>moving average aggregate goodput at interval p: The number of total bytes of data transferred within
interval <spanx style="verb">p</spanx> and the <spanx style="verb">MAD - 1</spanx> immediately preceding intervals, divided by <spanx style="verb">MAD</spanx> times <spanx style="verb">ID</spanx>.</t>
</list></t>

<t>the steps of the algorithm are:</t>

<t><list style="symbols">
  <t>Create a load-generating connection.</t>
  <t>At each interval:
  <list style="symbols">
      <t>Create an additional load-generating connection.</t>
      <t>If goodput has not saturated:
      <list style="symbols">
          <t>Compute the moving average aggregate goodput at interval <spanx style="verb">i</spanx> as <spanx style="verb">current_average</spanx>.</t>
          <t>If the standard deviation of the past <spanx style="verb">MAD</spanx> average goodput values is less than SDT of the <spanx style="verb">current_average</spanx>, declare goodput saturation and move on to probe responsiveness.</t>
        </list></t>
      <t>If goodput saturation has been declared:
      <list style="symbols">
          <t>Compute the responsiveness at interval <spanx style="verb">i</spanx> as <spanx style="verb">current_responsiveness</spanx>.</t>
          <t>If the standard deviation of the past MAD responsiveness values is less than SDT of the <spanx style="verb">current_responsiveness</spanx>, declare responsiveness saturation and report <spanx style="verb">current_responsiveness</spanx>
as the final test result.</t>
        </list></t>
    </list></t>
</list></t>

<t>In <xref target="goals"/>, it is mentioned that one of the goals is that the test finishes within
20 seconds. It is left to the implementation what to do when stability is not reached
within that time-frame. For example, an implementation might gather a provisional
responsiveness measurement or let the test run for longer.</t>

<t>Finally, if at any point one of these connections terminates with an error, the test should be aborted.</t>

<section anchor="confidence-of-test-results"><name>Confidence of test-results</name>

<t>As described above, a tool running the algorithm typically defines a time-limit for
the execution of each of the stages. For example, if the tool allocates a total
run-time of 40 seconds, and it executes a full downlink followed by a uplink test,
it may allocate 10 seconds to each of the saturation-stages (downlink capacity saturation, downlink responsiveness saturation, uplink capacity saturation, uplink responsiveness saturation).</t>

<t>As the different stages may or may not reach stability, we can define a "confidence score"
for the different metrics (capacity and responsiveness) the methodology was able to measure.</t>

<t>We define "Low" confidence in the result if the algorithm was not even able to
execute 4 iterations of the specific stage. Meaning, the moving average is
not taking the full window into account.</t>

<t>We define "Medium" confidence if the algorithm was able to execute at least 4
iterations, but did not reach stability based on standard deviation tolerance.</t>

<t>We define "High" confidence if the algorithm was able to fully reach stability
based on the defined standard deviation tolerance.</t>

<t>It must be noted that depending on the chosen standard deviation tolerance or
other parameters of the methodology and the network-environment it may be that a
measurement never converges to a stable point.
This is expected and part of the dynamic nature of networking and the accompanying
measurement inaccuracies. Which is why the importance of imposing a time-limit
is so crucial, together with an accurate depiction of the "confidence" the methodology
was able to generate.</t>

</section>
</section>
</section>
<section anchor="interpreting-responsiveness-results"><name>Interpreting responsiveness results</name>

<t>The described methodology uses a high-level approach to measure responsiveness.
By executing the test with regular HTTP requests a number of elements come into
play that will influence the result. Contrary to more traditional measurement methods
the responsiveness metric is not only influenced by the properties of the
network but can significantly be influenced by the properties of the client
and the server implementations. This section describes how the different
elements influence responsiveness and how a user may differentiate them
when debugging a network.</t>

<section anchor="elements-influencing-responsiveness"><name>Elements influencing responsiveness</name>

<t>Due to the HTTP-centric approach of the measurement methodology a number of
factors come into play that influence the results. Namely, the client-side
networking stack (from the top of the HTTP-layer all the way down to the physical layer),
the network (including potential transparent HTTP "accelerators"), and the server-side
networking stack. The following outlines how each of these contributes to the responsiveness.</t>

<section anchor="client-side-influence"><name>Client side influence</name>

<t>As the driver of the measurement, the client-side networking stack can have a
large influence on the result. The biggest influence of the client comes
when measuring the responsiveness in the uplink direction. Load-generation will
cause queue-buildup in the transport layer as well as the HTTP layer. Additionally,
if the network's bottleneck is on the first hop, queue-buildup will happen at the
layers below the transport stack (e.g., NIC firmware).</t>

<t>Each of these queue build-ups may cause latency and thus low responsiveness.
A well designed networking stack would ensure that queue-buildup in the TCP layer
is kept at a bare minimum with solutions like TCP_NOTSENT_LOWAT <xref target="RFC9293"/>.
At the HTTP/2 layer it is important that the load-generating data is not interfering
with the latency-measuring probes. For example, the different streams should not
be stacked one after the other but rather be allowed to be multiplexed for
optimal latency. The queue-buildup at these layers would only influence latency
on the probes that are sent on the load-generating connections.</t>

<t>Below the transport layer many places have a potential queue build-up. It is
important to keep these queues at reasonable sizes or that they implement techniques
like FQ-Codel. Depending on the techniques used at these layers, the queue build-up
can influence latency on probes sent on load-generating connections as well as
separate connections. If flow-queuing is used at these layers, the impact on
separate connections will be negligible.</t>

</section>
<section anchor="network-influence"><name>Network influence</name>

<t>The network obviously is a large driver for the responsiveness result.
Propagation delay from the client to the server as well as queuing in the
bottleneck node will cause latency. Beyond these traditional sources of latency,
other factors may influence the results as well. Many networks deploy transparent
TCP Proxies, firewalls doing deep packet-inspection, HTTP "accelerators",...
As the methodology relies on the use of HTTP/2, the responsiveness metric will
be influenced by such devices as well.</t>

<t>The network will influence both kinds of latency probes that the responsiveness
tests sends out. Depending on the network's use of Smart Queue Management and whether
this includes flow-queuing or not, the latency probes on the load-generating
connections may be influenced differently than the probes on the separate
connections.</t>

</section>
<section anchor="server-side-influence"><name>Server side influence</name>

<t>Finally, the server-side introduces the same kind of influence on the responsiveness
as the client-side, with the difference that the responsiveness will be impacted
during the downlink load generation.</t>

</section>
</section>
<section anchor="root-causing-responsiveness"><name>Root-causing Responsiveness</name>

<t>Once a responsiveness result has been generated one might be tempted to try to localize
the source of a potential low responsiveness. The responsiveness measurement
is however aimed at providing a quick, top-level view of the responsiveness
under working conditions the way end-users experience it.
Localizing the source of low responsiveness involves however a set of different
tools and methodologies.</t>

<t>Nevertheless, the Responsiveness Test allows to gain some insight into what the
source of the latency is. The previous section described the elements that influence
the responsiveness. From there it became apparent that the latency measured
on the load-generating connections and the latency measured on separate connections
may be different due to the different elements.</t>

<t>For example, if the latency measured on separate connections is much less than the
latency measured on the load-generating connections, it is possible to narrow
down the source of the additional latency on the load-generating connections.
As long as the other elements of the network don't do flow-queueing, the additional
latency must come from the queue build-up at the HTTP and TCP layer.
This is because all other bottlenecks in the network that may cause a queue build-up
will be affecting the load-generating connections as well as the separate latency
probing connections in the same way.</t>

</section>
</section>
<section anchor="responsiveness-test-server-api"><name>Responsiveness Test Server API</name>

<t>The responsiveness measurement is built upon a foundation of standard protocols:
IP, TCP, TLS, HTTP/2.
On top of this foundation, a minimal amount of new "protocol" is defined,
merely specifying the URLs that used for GET and PUT in the process of
executing the test.</t>

<t>Both the client and the server MUST support HTTP/2 over TLS.
The client MUST be able to send a GET request and a POST.
The server MUST be able to respond to both of these
HTTP commands.
The server MUST have the ability to provide content upon a GET request.
The server MUST use a packet scheduling algorithm that minimizes internal queueing
to avoid affecting the client's measurement.</t>

<t>As clients and servers become deployed that use L4S congestion control
(e.g., TCP Prague with ECT(1) packet marking),
for their normal traffic when it is available, and fall back
to traditional loss-based congestion controls (e.g., Reno or CUBIC)
otherwise, the same strategy SHOULD be used for Responsiveness Test traffic.
This is RECOMMENDED so that the synthetic traffic generated
by the Responsiveness Test mimics real-world traffic for that server.</t>

<t>Delay-based congestion-control algorithms (e.g., Vegas, FAST, BBR)
SHOULD NOT be used for Responsiveness Test traffic because they take
much longer to discover the depth of the bottleneck buffers.
Delay-based congestion-control algorithms seek to mitigate the
effects of bufferbloat, by detecting and responding to early signs
of increasing round-trip delay, and reducing the amount of data they
have in flight before the bottleneck buffer fills up and overflows.
In a world where bufferbloat is common, this is a pragmatic
mitigation to allow software to work better in that environment.
However, that approach does not fix the underlying problem of bufferbloat;
it merely avoids it in some cases,
and allows the problem in the network to persist.
For a diagnostic tool made to identify symptoms of bufferbloat in the
network so that they can be fixed, using a transport protocol explicitly
designed to mask those symptoms would be a poor choice, and would
require the test to run for much longer to deliver the same results.</t>

<t>The server MUST respond to 4 URLs:</t>

<t><list style="numbers">
  <t>A "small" URL/response:
The server must respond with a status code of 200 and 1 byte in the body.
The actual message content is irrelevant.
The server SHOULD specify the content-type as application/octet-stream.
The server SHOULD minimize the size, in bytes, of the response fields that are encoded and sent on the wire.</t>
  <t>A "large" URL/response:
The server must respond with a status code of 200 and a body size of at least 8GB.
The server SHOULD specify the content-type as application/octet-stream.
The body can be bigger, and may need to grow as network speeds increases over time.
The actual message content is irrelevant.
The client will probably never completely download the object,
but will instead close the connection after reaching working condition
and making its measurements.</t>
  <t>An "upload" URL/response:
The server must handle a POST request with an arbitrary body size.
The server should discard the payload.
The actual POST message content is irrelevant.
The client will probably never completely upload the object,
but will instead close the connection after reaching working condition
and making its measurements.</t>
  <t>A .well-known URL <xref target="RFC8615"/> which contains configuration information for
the client to run the test (See <xref target="discovery"/>, below.)</t>
</list></t>

<t>The client begins the responsiveness measurement by querying for the JSON <xref target="RFC8259"/> configuration.
This supplies the URLs for creating the load-generating connections in
the upstream and downstream direction as well as the small object
for the latency measurements.</t>

</section>
<section anchor="discovery"><name>Responsiveness Test Server Discovery</name>

<t>It makes sense for a service provider (either an application service provider like a video conferencing service
or a network access provider like an ISP) to host Responsiveness Test Server instances on their
network so customers can determine what to expect about the quality of their connection to
the service offered by that provider.
However, when a user performs a Responsiveness Test and determines
that they are suffering from poor responsiveness during the connection to that service,
the logical next questions might be,</t>

<t><list style="numbers">
  <t>"What's causing my poor performance?"</t>
  <t>"Is it poor buffer management by my ISP?"</t>
  <t>"Is it poor buffer management in my home Wi-Fi Access point?"</t>
  <t>"Something to do with the service provider?"</t>
  <t>"Something else entirely?"</t>
</list></t>

<t>To help an end user answer these questions, it will be useful for test clients
to be able to easily discover Responsiveness Test Server instances running in various
places in the network (e.g., their home router, their Wi-Fi access point, their ISP's
head-end equipment, etc).</t>

<t>Consider this example scenario: A user has a cable modem
service offering 100 Mb/s download speed, connected via
gigabit Ethernet to one or more Wi-Fi access points in their home,
which then offer service to Wi-Fi client devices at different rates
depending on distance, interference from other traffic, etc.
By having the cable modem itself host a Responsiveness Test Server instance,
the user can then run a test between the cable modem and their computer
or smartphone, to help isolate whether bufferbloat they are experiencing
is occurring in equipment inside the home (like their Wi-Fi access points)
or somewhere outside the home.</t>

<section anchor="well-known-uniform-resource-identifier-uri-for-test-server-discovery"><name>Well-Known Uniform Resource Identifier (URI) For Test Server Discovery</name>

<t>Any organization that wishes to host their own instance of a Responsiveness Test Server can advertise that capability
by hosting at the network quality well-known URI a resource whose content type is application/json and contains a valid JSON object meeting the
following criteria:</t>

<figure><artwork><![CDATA[
{
  "version": 1,
  "urls": {
    "large_download_url":"https://nq.example.com/api/v1/large",
    "small_download_url":"https://nq.example.com/api/v1/small",
    "upload_url":        "https://nq.example.com/api/v1/upload"
  }
  "test_endpoint": "hostname123.provider.com"
}
]]></artwork></figure>

<t>The server SHALL specify the content-type of the resource at the well-known URI as application/json.</t>

<t>The content of the "version" field SHALL be "1". Integer values greater than "1" are reserved
for future versions of this protocol.
The content of the "large_download_url", "small_download_url", and "upload_url" SHALL
all be validly formatted "http" or "https" URLs. See above for the semantics of the fields.
All of the fields in the sample configuration are required except "test_endpoint".
If the test server provider can pin all of the requests for a test run to a specific
host in the service (for a particular run), they can specify that host name in the
"test_endpoint" field.</t>

<t>For purposes of registration of the well-known URI <xref target="RFC8615"/>, the application name is "nq". The media type
of the resource at the well-known URI is "application/json" and the format of the resource is as specified
above. The URI scheme is "https". No additional path components, query strings or fragments are valid
for this well-known URI.</t>

</section>
<section anchor="dns-based-service-discovery-for-test-server-discovery"><name>DNS-Based Service Discovery for Test Server Discovery</name>

<t>To further aid the test client in discovering instances of the Responsiveness Test Server, organizations
wishing to host their own instances of the Test Server MAY advertise their availability using
DNS-Based Service Discovery <xref target="RFC6763"/> using conventional, unicast DNS <xref target="RFC1034"/> or multicast DNS <xref target="RFC6762"/>
on the organization network's local link(s).</t>

<t>The Responsiveness Test Service instances should advertise using the service type <xref target="RFC6335"/>
"_nq._tcp".  Population of the appropriate DNS zone with the
relevant unicast discovery records can be performed
automatically using a Discovery Proxy <xref target="RFC8766"/>,
or in some scenarios simply by having a human
administrator manually enter the required records.</t>

<section anchor="example"><name>Example</name>

<t>An obscure service provider hosting a Responsiveness Test Server instance for their
organization (obs.cr) on the "rpm.obs.cr" host would return the following answers
to PTR and SRV conventional DNS queries:</t>

<figure><artwork><![CDATA[
$ nslookup -q=ptr _nq._tcp.obs.cr.
Non-authoritative answer:
_nq._tcp.obs.crname = rpm._nq._tcp.obs.cr.
$ nslookup -q=srv rpm._nq._tcp.obs.cr.
Non-authoritative answer:
rpm._nq._tcp.obs.crservice = 0 0 443 rpm.obs.cr.
]]></artwork></figure>

<t>Given those conventional DNS query responses, the client would proceed to access the rpm.obs.cr
host on port 443 at the .well-known/nq well-known URI to begin the test.</t>

</section>
</section>
</section>
<section anchor="security-considerations"><name>Security Considerations</name>

<t>TBD</t>

</section>
<section anchor="iana-considerations"><name>IANA Considerations</name>

<section anchor="well-known-uri"><name>Well-Known URI</name>

<t>This specification registers the "nq" well-known URI in the
"Well-Known URIs" registry as defined by <xref target="RFC5785"></xref>.</t>

<t>URI suffix: nq</t>

</section>
<section anchor="service-name"><name>Service Name</name>

<t>IANA has added the following value to the "Service Name and Transport
Protocol Port Number Registry" in the System Range.  The registry for
that range requires IETF Review or IESG Approval <xref target="RFC6335"></xref>.</t>

<t>Service Name: nq
Transport Protocol: TCP
Assignee: <contact fullname="Stuart Cheshire"/>
Contact: <contact fullname="Stuart Cheshire"/>
Description: Network Quality test server endpoint</t>

</section>
</section>
<section anchor="acknowledgments"><name>Acknowledgments</name>

<t>Special thanks go to Jeroen Schickendantz for his tireless
enthusiasm around the project and his contributions to this I-D and the development
of the Go responsiveness measurement tool.
We would also like to thank Rich Brown for his editorial pass over this I-D.
We also thank Erik Auerswald, Matt Mathis and Omer Shapira for their constructive feedback on the I-D.</t>

</section>


  </middle>

  <back>



    <references title='Informative References'>

<reference anchor="Bufferbloat" >
  <front>
    <title>Bufferbloat: Dark Buffers in the Internet</title>
    <author initials="J." surname="Gettys">
      <organization></organization>
    </author>
    <author initials="K." surname="Nichols">
      <organization></organization>
    </author>
    <date year="n.d."/>
  </front>
  <seriesInfo name="Communications of the ACM, Volume 55, Number 1 (2012)" value=""/>
</reference>


<reference anchor='RFC0793' target='https://www.rfc-editor.org/info/rfc793'>
  <front>
    <title>Transmission Control Protocol</title>
    <author fullname='J. Postel' initials='J.' surname='Postel'/>
    <date month='September' year='1981'/>
  </front>
  <seriesInfo name='RFC' value='793'/>
  <seriesInfo name='DOI' value='10.17487/RFC0793'/>
</reference>

<reference anchor='RFC1034' target='https://www.rfc-editor.org/info/rfc1034'>
  <front>
    <title>Domain names - concepts and facilities</title>
    <author fullname='P. Mockapetris' initials='P.' surname='Mockapetris'/>
    <date month='November' year='1987'/>
    <abstract>
      <t>This RFC is the revised basic definition of The Domain Name System. It obsoletes RFC-882. This memo describes the domain style names and their used for host address look up and electronic mail forwarding. It discusses the clients and servers in the domain name system and the protocol used between them.</t>
    </abstract>
  </front>
  <seriesInfo name='STD' value='13'/>
  <seriesInfo name='RFC' value='1034'/>
  <seriesInfo name='DOI' value='10.17487/RFC1034'/>
</reference>

<reference anchor='RFC5785' target='https://www.rfc-editor.org/info/rfc5785'>
  <front>
    <title>Defining Well-Known Uniform Resource Identifiers (URIs)</title>
    <author fullname='M. Nottingham' initials='M.' surname='Nottingham'/>
    <author fullname='E. Hammer-Lahav' initials='E.' surname='Hammer-Lahav'/>
    <date month='April' year='2010'/>
    <abstract>
      <t>This memo defines a path prefix for "well-known locations", "/.well-known/", in selected Uniform Resource Identifier (URI) schemes. [STANDARDS-TRACK]</t>
    </abstract>
  </front>
  <seriesInfo name='RFC' value='5785'/>
  <seriesInfo name='DOI' value='10.17487/RFC5785'/>
</reference>

<reference anchor='RFC6335' target='https://www.rfc-editor.org/info/rfc6335'>
  <front>
    <title>Internet Assigned Numbers Authority (IANA) Procedures for the Management of the Service Name and Transport Protocol Port Number Registry</title>
    <author fullname='M. Cotton' initials='M.' surname='Cotton'/>
    <author fullname='L. Eggert' initials='L.' surname='Eggert'/>
    <author fullname='J. Touch' initials='J.' surname='Touch'/>
    <author fullname='M. Westerlund' initials='M.' surname='Westerlund'/>
    <author fullname='S. Cheshire' initials='S.' surname='Cheshire'/>
    <date month='August' year='2011'/>
    <abstract>
      <t>This document defines the procedures that the Internet Assigned Numbers Authority (IANA) uses when handling assignment and other requests related to the Service Name and Transport Protocol Port Number registry. It also discusses the rationale and principles behind these procedures and how they facilitate the long-term sustainability of the registry.</t>
      <t>This document updates IANA's procedures by obsoleting the previous UDP and TCP port assignment procedures defined in Sections 8 and 9.1 of the IANA Allocation Guidelines, and it updates the IANA service name and port assignment procedures for UDP-Lite, the Datagram Congestion Control Protocol (DCCP), and the Stream Control Transmission Protocol (SCTP). It also updates the DNS SRV specification to clarify what a service name is and how it is registered. This memo documents an Internet Best Current Practice.</t>
    </abstract>
  </front>
  <seriesInfo name='BCP' value='165'/>
  <seriesInfo name='RFC' value='6335'/>
  <seriesInfo name='DOI' value='10.17487/RFC6335'/>
</reference>

<reference anchor='RFC6762' target='https://www.rfc-editor.org/info/rfc6762'>
  <front>
    <title>Multicast DNS</title>
    <author fullname='S. Cheshire' initials='S.' surname='Cheshire'/>
    <author fullname='M. Krochmal' initials='M.' surname='Krochmal'/>
    <date month='February' year='2013'/>
    <abstract>
      <t>As networked devices become smaller, more portable, and more ubiquitous, the ability to operate with less configured infrastructure is increasingly important. In particular, the ability to look up DNS resource record data types (including, but not limited to, host names) in the absence of a conventional managed DNS server is useful.</t>
      <t>Multicast DNS (mDNS) provides the ability to perform DNS-like operations on the local link in the absence of any conventional Unicast DNS server. In addition, Multicast DNS designates a portion of the DNS namespace to be free for local use, without the need to pay any annual fee, and without the need to set up delegations or otherwise configure a conventional DNS server to answer for those names.</t>
      <t>The primary benefits of Multicast DNS names are that (i) they require little or no administration or configuration to set them up, (ii) they work when no infrastructure is present, and (iii) they work during infrastructure failures.</t>
    </abstract>
  </front>
  <seriesInfo name='RFC' value='6762'/>
  <seriesInfo name='DOI' value='10.17487/RFC6762'/>
</reference>

<reference anchor='RFC6763' target='https://www.rfc-editor.org/info/rfc6763'>
  <front>
    <title>DNS-Based Service Discovery</title>
    <author fullname='S. Cheshire' initials='S.' surname='Cheshire'/>
    <author fullname='M. Krochmal' initials='M.' surname='Krochmal'/>
    <date month='February' year='2013'/>
    <abstract>
      <t>This document specifies how DNS resource records are named and structured to facilitate service discovery. Given a type of service that a client is looking for, and a domain in which the client is looking for that service, this mechanism allows clients to discover a list of named instances of that desired service, using standard DNS queries. This mechanism is referred to as DNS-based Service Discovery, or DNS-SD.</t>
    </abstract>
  </front>
  <seriesInfo name='RFC' value='6763'/>
  <seriesInfo name='DOI' value='10.17487/RFC6763'/>
</reference>

<reference anchor='RFC8615' target='https://www.rfc-editor.org/info/rfc8615'>
  <front>
    <title>Well-Known Uniform Resource Identifiers (URIs)</title>
    <author fullname='M. Nottingham' initials='M.' surname='Nottingham'/>
    <date month='May' year='2019'/>
    <abstract>
      <t>This memo defines a path prefix for "well-known locations", "/.well-known/", in selected Uniform Resource Identifier (URI) schemes.</t>
      <t>In doing so, it obsoletes RFC 5785 and updates the URI schemes defined in RFC 7230 to reserve that space. It also updates RFC 7595 to track URI schemes that support well-known URIs in their registry.</t>
    </abstract>
  </front>
  <seriesInfo name='RFC' value='8615'/>
  <seriesInfo name='DOI' value='10.17487/RFC8615'/>
</reference>

<reference anchor='RFC8766' target='https://www.rfc-editor.org/info/rfc8766'>
  <front>
    <title>Discovery Proxy for Multicast DNS-Based Service Discovery</title>
    <author fullname='S. Cheshire' initials='S.' surname='Cheshire'/>
    <date month='June' year='2020'/>
    <abstract>
      <t>This document specifies a network proxy that uses Multicast DNS to automatically populate the wide-area unicast Domain Name System namespace with records describing devices and services found on the local link.</t>
    </abstract>
  </front>
  <seriesInfo name='RFC' value='8766'/>
  <seriesInfo name='DOI' value='10.17487/RFC8766'/>
</reference>

<reference anchor='RFC8290' target='https://www.rfc-editor.org/info/rfc8290'>
  <front>
    <title>The Flow Queue CoDel Packet Scheduler and Active Queue Management Algorithm</title>
    <author fullname='T. Hoeiland-Joergensen' initials='T.' surname='Hoeiland-Joergensen'/>
    <author fullname='P. McKenney' initials='P.' surname='McKenney'/>
    <author fullname='D. Taht' initials='D.' surname='Taht'/>
    <author fullname='J. Gettys' initials='J.' surname='Gettys'/>
    <author fullname='E. Dumazet' initials='E.' surname='Dumazet'/>
    <date month='January' year='2018'/>
    <abstract>
      <t>This memo presents the FQ-CoDel hybrid packet scheduler and Active Queue Management (AQM) algorithm, a powerful tool for fighting bufferbloat and reducing latency.</t>
      <t>FQ-CoDel mixes packets from multiple flows and reduces the impact of head-of-line blocking from bursty traffic. It provides isolation for low-rate traffic such as DNS, web, and videoconferencing traffic. It improves utilisation across the networking fabric, especially for bidirectional traffic, by keeping queue lengths short, and it can be implemented in a memory- and CPU-efficient fashion across a wide range of hardware.</t>
    </abstract>
  </front>
  <seriesInfo name='RFC' value='8290'/>
  <seriesInfo name='DOI' value='10.17487/RFC8290'/>
</reference>

<reference anchor='RFC8033' target='https://www.rfc-editor.org/info/rfc8033'>
  <front>
    <title>Proportional Integral Controller Enhanced (PIE): A Lightweight Control Scheme to Address the Bufferbloat Problem</title>
    <author fullname='R. Pan' initials='R.' surname='Pan'/>
    <author fullname='P. Natarajan' initials='P.' surname='Natarajan'/>
    <author fullname='F. Baker' initials='F.' surname='Baker'/>
    <author fullname='G. White' initials='G.' surname='White'/>
    <date month='February' year='2017'/>
    <abstract>
      <t>Bufferbloat is a phenomenon in which excess buffers in the network cause high latency and latency variation. As more and more interactive applications (e.g., voice over IP, real-time video streaming, and financial transactions) run in the Internet, high latency and latency variation degrade application performance. There is a pressing need to design intelligent queue management schemes that can control latency and latency variation, and hence provide desirable quality of service to users.</t>
      <t>This document presents a lightweight active queue management design called "PIE" (Proportional Integral controller Enhanced) that can effectively control the average queuing latency to a target value. Simulation results, theoretical analysis, and Linux testbed results have shown that PIE can ensure low latency and achieve high link utilization under various congestion situations. The design does not require per-packet timestamps, so it incurs very little overhead and is simple enough to implement in both hardware and software.</t>
    </abstract>
  </front>
  <seriesInfo name='RFC' value='8033'/>
  <seriesInfo name='DOI' value='10.17487/RFC8033'/>
</reference>

<reference anchor='RFC8259' target='https://www.rfc-editor.org/info/rfc8259'>
  <front>
    <title>The JavaScript Object Notation (JSON) Data Interchange Format</title>
    <author fullname='T. Bray' initials='T.' role='editor' surname='Bray'/>
    <date month='December' year='2017'/>
    <abstract>
      <t>JavaScript Object Notation (JSON) is a lightweight, text-based, language-independent data interchange format. It was derived from the ECMAScript Programming Language Standard. JSON defines a small set of formatting rules for the portable representation of structured data.</t>
      <t>This document removes inconsistencies with other specifications of JSON, repairs specification errors, and offers experience-based interoperability guidance.</t>
    </abstract>
  </front>
  <seriesInfo name='STD' value='90'/>
  <seriesInfo name='RFC' value='8259'/>
  <seriesInfo name='DOI' value='10.17487/RFC8259'/>
</reference>

<reference anchor='RFC9293' target='https://www.rfc-editor.org/info/rfc9293'>
  <front>
    <title>Transmission Control Protocol (TCP)</title>
    <author fullname='W. Eddy' initials='W.' role='editor' surname='Eddy'/>
    <date month='August' year='2022'/>
    <abstract>
      <t>This document specifies the Transmission Control Protocol (TCP). TCP is an important transport-layer protocol in the Internet protocol stack, and it has continuously evolved over decades of use and growth of the Internet. Over this time, a number of changes have been made to TCP as it was specified in RFC 793, though these have only been documented in a piecemeal fashion. This document collects and brings those changes together with the protocol specification from RFC 793. This document obsoletes RFC 793, as well as RFCs 879, 2873, 6093, 6429, 6528, and 6691 that updated parts of RFC 793. It updates RFCs 1011 and 1122, and it should be considered as a replacement for the portions of those documents dealing with TCP requirements. It also updates RFC 5961 by adding a small clarification in reset handling while in the SYN-RECEIVED state. The TCP header control bits from RFC 793 have also been updated based on RFC 3168.</t>
    </abstract>
  </front>
  <seriesInfo name='STD' value='7'/>
  <seriesInfo name='RFC' value='9293'/>
  <seriesInfo name='DOI' value='10.17487/RFC9293'/>
</reference>

<reference anchor='RFC9330' target='https://www.rfc-editor.org/info/rfc9330'>
  <front>
    <title>Low Latency, Low Loss, and Scalable Throughput (L4S) Internet Service: Architecture</title>
    <author fullname='B. Briscoe' initials='B.' role='editor' surname='Briscoe'/>
    <author fullname='K. De Schepper' initials='K.' surname='De Schepper'/>
    <author fullname='M. Bagnulo' initials='M.' surname='Bagnulo'/>
    <author fullname='G. White' initials='G.' surname='White'/>
    <date month='January' year='2023'/>
    <abstract>
      <t>This document describes the L4S architecture, which enables Internet applications to achieve low queuing latency, low congestion loss, and scalable throughput control. L4S is based on the insight that the root cause of queuing delay is in the capacity-seeking congestion controllers of senders, not in the queue itself. With the L4S architecture, all Internet applications could (but do not have to) transition away from congestion control algorithms that cause substantial queuing delay and instead adopt a new class of congestion controls that can seek capacity with very little queuing. These are aided by a modified form of Explicit Congestion Notification (ECN) from the network. With this new architecture, applications can have both low latency and high throughput.</t>
      <t>The architecture primarily concerns incremental deployment. It defines mechanisms that allow the new class of L4S congestion controls to coexist with 'Classic' congestion controls in a shared network. The aim is for L4S latency and throughput to be usually much better (and rarely worse) while typically not impacting Classic performance.</t>
    </abstract>
  </front>
  <seriesInfo name='RFC' value='9330'/>
  <seriesInfo name='DOI' value='10.17487/RFC9330'/>
</reference>




    </references>


<section anchor="example-server-configuration"><name>Example Server Configuration</name>

<t>This section shows fragments of sample server configurations to host an responsiveness
measurement endpoint.</t>

<section anchor="apache-traffic-server"><name>Apache Traffic Server</name>

<t>Apache Traffic Server starting at version 9.1.0 supports configuration as a responsiveness
server. It requires the generator and the statichit plugin.</t>

<t>The sample remap configuration file then is:</t>

<figure><artwork><![CDATA[
map https://nq.example.com/api/v1/config \
    http://localhost/ \
    @plugin=statichit.so \
    @pparam=--file-path=config.example.com.json \
    @pparam=--mime-type=application/json

map https://nq.example.com/api/v1/large \
    http://localhost/cache/8589934592/ \
    @plugin=generator.so

map https://nq.example.com/api/v1/small \
    http://localhost/cache/1/ \
    @plugin=generator.so

map https://nq.example.com/api/v1/upload \
    http://localhost/ \
    @plugin=generator.so
]]></artwork></figure>

</section>
</section>


  </back>

<!-- ##markdown-source:
H4sIAFtXL2UAA9V9+XMjR3Lu7/VX1MM+h8h9AIacSxo6FDY1HGnHOwd3SK3i
he3QNNBFoJdAN9QHMVjt+G93fplZRzdAajbseOGnPQQC3XVkZWV+eVTWZDIx
bdGu3Jn94JpNVTbFnStd09iuzF1tf6rq26Jc2JdVmRdtQb+bbDar3d2XP59X
8zJbUwd5nd20k8K1N5Nis1lP6l4Dk5MnJs9ad2bm9P+Lqt6d2abNjWm62bpo
GmrrerehZl6/uv7ezKucujmzHTX2jSk29Zlt665pH5+cvDh5bLLaZWf2us5K
6qJuzZaGtairbkOvX9pLV99U9Tor586+dVnT1W7tytbcuh09mNMzZevq0rWT
CwyZhtBmZf5ztqpK6n/nGrMpzuy/ttV8bBtqvnY3DX3arfHh343JunZZ1WfG
2gn9z9qibM7sy6m9zLJmvuSvhCIvl3XRtNVmmf5U1TSv881m5Wgc8yl/11Af
rj2z70unP11m9a39Kdvxz/OiJWq97DaubouyGtuX2aqgKZZFZl88Ozl9Kk9V
XdmCrD+WRetye9USoRtb3djztauLecZPuXVWrM7sfMMj+ucMvU3n1dr0p/Nh
SqTbuTqZzQciUrZaJd//z5hKXa/vncbVlBbBNcuidslMrtouq9v+L/8z5jLX
Id07oZ+m9g/ZlvZgk8znp4KWJf2aJ0P93bm6oUGis5dFOS/KMmuLtL8lv7Rd
/nM3xxfTbj51eWdMUfIOaqkF8Pl33c2Nq2erKmvP+PW4BeifiQztX6b2B9e2
u6b37R+n9l0xX1Yr+VqF0Sht0V6AqvJNQ2/ZdunCHh3JShClXINREcGr9bor
iXAsfzA3PH/+8u3Y/rladWtnnz0b23fdekYC69QePT45fXxMrXz4/uXJ1y+e
nMnH05MnT/Xjs6+/eaYfnz95Ej5+/fxx/Ohf++b5qX/gm6+fP/cfH7848R9P
noRnHz97oR9fPA4dv3jyhJ41k8nEZjPisGxOEuj7qrYksHYkfbKahE1mV9n8
FnPrS9Gxvcvqouqa1c7OaTO63KyyxZiebl05341p5e0sknZMC9zYmXMltTOv
FmXxV3qDvspKEui0xG1HHOHG9E5LjLpeVyULuk1brXkhqjzbfdVYWgeI2GZq
XtE4LAlNIm1mczfPcodR4ldblZYlaVbnxV+hJVo3X2KhViRGVx0v19gULY2F
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
y11yHa3p7QvMAjXf+ArRoPoZc4w9g9LeuSsysyhQbLgNl9mCepwMrjeI7s/F
k0PnPjahFl8pvQdmoKbkdV/5wQfj0pJEfAuo6WVp5no2eRwSFjiAwLtPb77T
69ZANk7RI/MwbMBIFX/PNYuxwzt/wAWyR5nGc3FAl6wNtYRFenVJ2k8sRzmX
8xs15GyDON9mSeQch6smiqZaJcWXezZUkDghalJIJeRYjh/10D3TcKQiF1zB
XHjkb+o+yIPNMY8pXPpMLNt7XS8IA6D4owAKqW0Bsomz/LUYgQX00Y8fXh9z
gshBHWfMeYmU8EVW+ooRmvLIJy68ZpGhoi9Pf4l0PbBQfGY1R2yn8FclIj/c
pw3vuGE2MPv3sXnV0gNMryVsJ7PbsoHp8SBD/6IP/f/S6PGVAKoyHJQpckEw
Wn9p7VyooBzT2XBbLK1ppqewfzXWjrQS1+jMnqJ626irVw398SsffxFT6Ge/
e3+mH0dnI5y4bs4ePSp/mapwmBLHPco2xaO700diPY3lfUYuf9/7YsLq+wJs
5T2r//zG+wry6f3PmA+2zM/+dh9qZIS1QUWH08dPpkFh0/sj89kfIU/MsvM3
b+63yqK1Kavnr30aLO/+AqpN79fZZyT7tRCzVXsnjTI6HU058XgRy5TIbed6
JRE9YPXAE1dQZ5Co1cp9qbUQMoi3eh4aw4EVHx9cR7Ev0xWSAXPB+ZkTplzx
yeY1alnnsnAjSHVZQjbEmqkFtufjNwGMN26NK1PnIX4ldjzf597/KgnV6O1D
iYEhJGEPTM43DG9aYYh/ixwRLjqWY0Sy7gGLYqdvcKI89htyrAUlhzNOkj6v
By8MixY/NlVFR/JGLISN947H0T8VGS1rRTiBUb1bazhyoYAGPPXul0ZKBywK
dnkn2e4DnkxsNA3+JYBeOm3sqPxlJKFlPkHK4sh8Gc/j7SHTj0IUSFhib/sU
HKzz9c5ywzwhA0CbCJrowIR9pvZdlUZNuRYBdB8pO67HwUYevP8k/Dh/7Qau
VAmJ1MqhJtwq0p+CaKKLd1eT79htfaWLGE2om/sVz3WsKp4VeWQvX7qtDKhQ
9GkwYO6/uUc6Gff0Ga70aDwSvkeZhUbTob49/789BYaXNCojQS5G/Oah2TMH
Pf/6+RMylcU+4JMkegMgKoHT2lOP1IY8e3ry5Ck9y47PVTv4kRp6/Pmzzx/o
6eyYucRJKVwN/YjvYL1+gFQFn6ryJFCnTJyyjDjdnCzQZSxPntC2MKOfSb/8
3M43xGf2km8x7pVTgvN8U3NaP6bxVwBWb4oY78QJZAjWNtclq/NQ602tKbB7
R4Zq1uoJQ++hjhRH0pvS/Zuvnz+nnQss5X3uHp7jlnQShTvYXQpIM7vs1iiG
l8N3ypKBD8qVUjPIlT5JNshKHaOmV70SJQs8hTs65l29b2tFyPMlCNeGMKHp
rfURNT+d18feLTuqN+upfDcSBheXe+1ItWmedyy/wIYbW2GX1x9Y2Fx9+HOP
LXmlIBUK1ygI+t+2bFZVddtt7OSXbzdtbf26a8dT864qJ7Q4S8SoMr3BCV2d
mcGjLDi/tRj0XiP9fpr67vBj9/d14HG/CN/aE/rP06dPbKTXVMCML5CnsHKf
ErvgLG/SMwdKaL1sOLmOiPkk9CJ6Dtm4iKFgBKoPEqcg4bShemBDeVFEBx87
rq4csRakjzdAVciZ6+8u+OjV+bvzvd8G5sKH11oDyGtiYSxRib4gFRTbnsZS
JdtvjDCKalO+Kc0fAqS99a+0DZ99/c2zf6ehs3ZC+e9PZ7b8RUoIeSGEszLG
8NDZYM5zlw8YV+oTaUrTKH1RUmp8jAp5vhKjugS138kRng86vpGHG1dc4th+
QFXGqdWcPJ2DuFmR3c2F+kP58tevrr+nliTfrqY/r36w55BwOOf/ryoU/50L
zMbR8WTD6Kwf3RnfOnLecOyMHvr111+v2g7Zpi/J7lpSf59JvOJ0WTZv7/v5
Il6acBYyp/+k9lMK1TwcAoOcz7GeK5cvtODbFZgASQgEkm8JM1eg8r+4uqI9
cTVfFvNbep3E9F9ZIHHtH/iGkF9IDSxJBmfN2pev1BhmKM67lOuB5BRQrEpE
376eXCRVne7cqmJb2WOnH6qHnNMIeXJlpG28i15s6krmYT/A1fFdDRb1wyZ8
RjK9YBDU+ECODoUb42bk9Vd1cWvPaes322yVj+1bQuf4P76TmEb9Hpd4Xy3J
nKqzKKit1CSUGwvtDQkFpGx4Qc3dGNzOwIkcJigNL/lfpsDcb9FYWnvbJNgs
1Gfza9xD9dFyz8phUmhKR88YAuTONyiFgL3E+Q0yKtJoh76OFWdpo6j5ZF9M
T6cnPmdpGMnImr3cW6MZHDhvEbYZSKWxgSpelI7YIS0pvKKrjqSij/gKDWg6
2WbQH0r9iF+o8HoMDz1sGEsT9t/Yssaj9CRDKhDzkX7/zzKEb8OYpsQ3/ic+
iPztZILuJ0Db30qbaW9TdlAM31jjxC4g1rdDq8B8wcjlLMQ9A59jBR998+yb
Fy+ePH324vFwJoHeNJMv6UyCLQ92dvpf7UPjdV+2FL3GsdT/CUv7bTMxqwAA

-->

</rfc>

